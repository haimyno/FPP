name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push Docker image
        run: |
          docker build -t haimyno/fpp-project:$GITHUB_SHA .
          
      # Step 5: Set up SSH (creating directory, adding private key, and host)
      - name: Set up SSH
        run: |
          # Create .ssh directory if it doesn't exist
          mkdir -p ~/.ssh

          # Add the private key from GitHub secrets to the id_rsa file
          echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa

          # Set the correct permissions for the private key
          chmod 600 ~/.ssh/id_rsa

          # Add the server to known_hosts to prevent SSH prompt
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      # Step 6: Deploy using SSH and run multiple commands
      - name: Deploy using SSH
        run: |
          # SSH into the remote server and run commands
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
           
            docker pull haimyno/fpp-project:$GITHUB_SHA
            
            echo "haimyno/fpp-project:$GITHUB_SHA"
            # Stop the existing container (if running)
            docker stop fpp-project-container || true
            docker rm fpp-project-container || true

            # Run the new container
            docker run -d --name fpp-project-container -p 80:80 haimyno/fpp-project:$GITHUB_SHA

            # Optionally, add more commands here for other deploy tasks, e.g., restart services
            echo "Deployment completed successfully"
          EOF
          
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
